" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set nobackup
set nowritebackup
set history=50		" Keep 50 lines of command line history
set ruler		" show the cursor position all the time
set showcmd		" display incomplete commands
set incsearch		" do incremental searching
set tabstop=2		" 2 spaces per indend
set smarttab
set shiftwidth=2
set autoindent
set expandtab

" Map the leader to comma, which is easier to acccess.
let mapleader = ","

" Swith syntax highlighting on, when the terminal has colors
" Also switching on highlighting the last used search pattern
if (&t_Co > 2 || has("gui_running")) && !exists("syntax_on")
	syntax on
	set hlsearch
endif

" Only do this part when compiled for autocommands.
if has("autocmd")
	
	" Enable file type detection
	" Use the default filetype settings, so that mail gets 'tw' set to 72,
	" 'cindent' is on in C files, etc.
	" Also load indent files, to automatically do language-depending indenting.
	filetype plugin indent on
	
	" Put these in an autocmd group, so that we can delete them easily.
	augroup vimrcEx
	au!

	" For all text files set 'textwidth' to 78 characters.
	autocmd FileType text setlocal textwidth=78

	" When editing a file, always jump to the last known cursor position.
	" Don't do it when the position is invalid or when inside an event handler
	" (happens when dropping a file on gvim).
	autocmd BufReadPost *
		\ if line("'\'") > 0 && line("'\'") <= line("$") |
		\ exe "normal g`\"" |
		\ endif

	augroup END
  augroup markdown
    autocmd BufRead *.markdown  set ai formatoptions=tcroqn2 comments=n:>
  augroup END

else

	set autoindent		" always set autoindenting on

endif " has("autocmd")
