#!/bin/sh

# The glyph launcher has issues with wine-staging during the download phase, and
# will balk with a page fault. Just use stock wine to download/patch:
#
#     # rift syswine
#
# And then use wine-staging for better in-game performance.

if [[ -d $HOME/.wine-versions/rift-testing ]]; then
    export WINE=$HOME/.wine-versions/rift-testing/bin/wine
else
    export WINE=$HOME/.wine-versions/rift/bin/wine
fi

export WINEARCH=win32
export WINEPREFIX=$HOME/.local/share/wineprefixes/rift

case "$1" in
    reset)
        echo -n "This will delete $WINEPREFIX completely. This can not be undone. Are you sure? [y/N] "
        read confirm
        case "$confirm" in
            ("y")
                echo "Deleting $WINEPREFIX..."
                rm -rf -- "$WINEPREFIX"
                echo "Done!"
                ;;
            *)
                echo "Aborting."
                ;;
            esac
        ;;
    install)
        # The download process doesn't like wine-staging.
        export WINE=/usr/bin/wine

        if [[ -d "$WINEPREFIX" ]]; then
            echo "Destination $WINEPREFIX exists. Not overwriting. Run $0 reset first."
            exit
        fi

        INSTALLER_URI="http://glyph.dyn.triongames.com/glyph/live/GlyphInstall.exe"
        INSTALLER_MD5="cdd61d84d94360143a416fce384de96f"
        INSTALLER="$HOME/.cache/$(basename $INSTALLER_URI)"

        winetricks vd=1920x1080 vcrun2012 d3dx9 d3dx9_43 \
                   videomemorysize=1024 strictdrawordering=enabled orm=fbo \
                   glsl=enabled ddr=opengl multisampling=disabled

        if [[ ! -f "$INSTALLER" ]]; then
            curl -o "$INSTALLER" "$INSTALLER_URI"
        fi

        if [[ -f "$INSTALLER" ]]; then
            MD5=$(md5sum "$INSTALLER")

            if [[ "$MD5" = "$INSTALLER_MD5  $INSTALLER" ]]; then
                "$WINE" "$INSTALLER"
            else
                echo "Installer did not pass md5 check. Removing and downloading again."

                rm "$INSTALLER"
                curl -o "$INSTALLER" "$INSTALLER_URI"

                MD5=$(md5sum "$INSTALLER")

                if [[ "$MD5" = "$INSTALLER_MD5 $INSTALLER" ]]; then
                    "$WINE" "$INSTALLER"
                else
                    echo "Downloaded installer twice. Did not pass md5 check. Aborting."
                fi
            fi
        else
            echo "The installation file could not be found at $INSTALLER"
        fi
        ;;

    version)
        echo Wine path: ${WINE%/bin/wine}
        echo Wine version: $($WINE --version)
        ;;

    config)
        ${WINE%/*}/winecfg
        ;;

    winetricks)
        shift
        winetricks $@
        ;;

    kill)
        ps ux | grep -v "grep\|$(basename $0) kill" | \
            grep -i "windows\|wineserver\|rift\|awesomium\|winetricks\|winedbg\|explorer.exe" | \
            awk '{print $2}' | xargs kill -KILL
        ;;

    taskset)
        taskset -p "0xFFFFFFFF" $(pgrep rift.exe)
        ;;

    # Stock wine
    syswine)
        export WINEDEBUG=-all
        export LD_PRELOAD="libpthread.so.0 libGL.so.1"
        export __GL_THREADED_OPTIMISATIONS=1
        export __GL_SYNC_TO_VBLANK=1
        export __GL_SYNC_DISPLAY_DEVICE="DFP-0"
        /usr/bin/wine "C://Program Files/Glyph/GlyphClient"
        ;;

    # Precompiled wine-staging
    staging)
        export WINEDEBUG=-all
        export LD_PRELOAD="libpthread.so.0 libGL.so.1"
        export __GL_THREADED_OPTIMISATIONS=1
        export __GL_SYNC_TO_VBLANK=1
        export __GL_SYNC_DISPLAY_DEVICE="DFP-0"
        /opt/wine-staging/bin/wine "C://Program Files/Glyph/GlyphClient"
        ;;

    # Self-compiled version of wine-staging
    *)
        export WINEDEBUG=-all
        export LD_PRELOAD="libpthread.so.0 libGL.so.1"
        export __GL_THREADED_OPTIMISATIONS=1
        export __GL_SYNC_TO_VBLANK=1
        export __GL_SYNC_DISPLAY_DEVICE="DFP-0"
        $WINE "C://Program Files/Glyph/GlyphClient"
esac
