## -*- mode: sh; tab-width: 4; indent-tabs-mode: t; -*-
## {{{ Aliases

source ~/dev/dotfiles/zsh/_android.sh

# {{{ transmission-daemon
alias tt=transmission-remote
alias ttl='tt -l'

function tts {
	local torrents

	# [[-t 0]] = stdin (fd 0) is open and associated with a terminal device.
	if [[ ! -t 0 ]]; then
		torrents=()

		while read line; do
			torrents+=( $(echo $line | tr -s ' ' | cut -d ' ' -f 1) )
		done

		torrents=${(j:,:)torrents}
		echo "Starting torrents: ${torrents}."
	elif [[ ! -z "$1" ]]; then
		torrents="$1"
	fi

	tt -t${torrents:-all} -s
}

function ttS {
	local torrents

	# [[-t 0]] = stdin (fd 0) is open and associated with a terminal device.
	if [[ ! -t 0 ]]; then
		torrents=()

		while read line; do
			torrents+=( $(echo $line | tr -s ' ' | cut -d ' ' -f 1) )
		done

		torrents=${(j:,:)torrents}
		echo "Stopping torrents: ${torrents}."
	elif [[ ! -z "$1" ]]; then
		torrents="$1"
	fi

	tt -t${torrents:-all} -S ${2}
}

function ttr {
	local torrents

	# [[-t 0]] = stdin (fd 0) is open and associated with a terminal device.
	if [[ ! -t 0 ]]; then
		torrents=()

		while read line; do
			torrents+=( $(echo $line | tr -s ' ' | cut -d ' ' -f 1) )
		done

		torrents=${(j:,:)torrents}
		echo "Stopping torrents: ${torrents}."
	elif [[ ! -z "$1" ]]; then
		torrents="$1"
	fi
	[[ -z "$torrents" ]] && echo "Won't remove all torrents!" && return 2

	tt -t${torrents} -r
}

function ttm {
	local torrents

	# [[-t 0]] = stdin (fd 0) is open and associated with a terminal device.
	if [[ ! -t 0 ]]; then
		torrents=()

		while read line; do
			torrents+=( $(echo $line | tr -s ' ' | cut -d ' ' -f 1) )
		done

		torrents=${(j:,:)torrents}
		echo "Stopping torrents: ${torrents}."
	elif [[ ! -z "$1" ]]; then
		torrents="$1"
	fi
	[[ -z "$torrents" ]] && echo "Won't move all torrents!" && return 2
	[[ -z "$2" ]] && echo "Please specify a target folder" && return 2

	tt -t${torrents} -m ${2}
}

function ttf {
	local pattern='*'
	[[ ! -z "$1" ]] && pattern="$1"
	ttl | grep -i "$pattern"
}

function tta {
	local url='*' location args
	[[ ! -z "$1" ]] && url="$1"
	[[ ! -z "$2" ]] && location="$2"

	args="-a $url"
	[[ ! -z "$location" ]] && args="$args -w $location"
	tt "$args"
}
# }}}

## Twitch.tv livestreamer shortcut
function ttv() {
	livestreamer http://www.twitch.tv/$1 best
}

function remacs {
	emacsclient -e "(progn (setq kill-emacs-hook 'nil) (kill-emacs))"
	emacs --daemon
}

## Get a new terminal, in same folder
alias t='urxvtc'

## Serve $PWD with WEBrick
function serve {
	port="${1:-3000}"
	ruby -r webrick -e "s = WEBrick::HTTPServer.new(:Port => $port, :DocumentRoot => Dir.pwd); trap('INT') { s.shutdown }; s.start"
}

alias sc2='WINEPREFIX=~/.wine_sc2 wine explorer /desktop=sc2,1920x1064 "C:\Starcraft II\Starcraft II.exe"'
alias sc2na='WINEPREFIX=~/.wine_sc2 wine explorer /desktop=sc2na,1920x1064 "C:\Starcraft II NA\Starcraft II.exe"'

alias sr="screen -URDS rtorrent rtorrent"
alias im="screen -l -UDRS weechat weechat-curses"
#alias git=hub
alias gnex='emulator -avd gnex -scale auto -no-boot-anim -cpu-delay 0 -qemu -icount auto'

# mplayer & youtube
alias m=mplayer;
function yt() {
	i="$1"
	mplayer -fs $(curl -s "http://www.youtube.com/get_video_info?&video_id=$i" | echo -e $(sed 's/%/\\x/g;s/.*\(v[0-9]\.lscache.*\)/http:\/\/\1/g') | grep -oP '^[^|,]*')
}

# Archive utilities
function compress() {
	if [[ ! -z "$1" ]]; then
		fn="$1"
		shift
	else
		echo "Please provide an archive name"
		return 65
	fi

	# Process flags
	while [[ $1 == -* ]]; do

	done

	if [[ -z "$1" ]]; then
		echo "Please provide a list of files or directories to compress"
		return 65
	fi

	case $fn in
	*.tar.gz)       tar czf $fn $@                              ;;
	*.tar.bz2)      tar cjf $fn $@                              ;;
	*.zip | *.cbz)  zip -r $fn $@                               ;;
	*.7z)           7z a -t7z -m0=lzma -mx=9 -mfb=64 $fn $@     ;;
	*)              echo "Please provide a valid archive kind: *.tar.gz, *.tar.bz2, *.zip, *.cbz, *.7z"; return 65 ;;
	esac
}

function extract() {
	while [ ! -z "$1" ]; do
		if [ -f "$1" ]; then
			case "$1" in
				*.tbz2 | *.tar.bz2) tar -xjf  "$1"      ;;
				*.txz | *.tar.xz)   tar -xJf  "$1"      ;;
				*.tgz | *.tar.gz)   tar -xzf  "$1"      ;;
				*.tar | *.cbt)      tar -xf   "$1"      ;;
				*.zip | *.cbz)      unzip      "$1"     ;;
				*.rar | *.cbr)      unrar x    "$1"     ;;
				*.arj)              unarj x    "$1"     ;;
				*.ace)              unace x    "$1"     ;;
				*.bz2)              bunzip2    "$1"     ;;
				*.xz)               unxz       "$1"     ;;
				*.gz)               gunzip     "$1"     ;;
				*.7z)               7z x       "$1"     ;;
				*.Z)                uncompress "$1"     ;;
				*.gpg)       gpg2 -d "$1" | tar -xvzf - ;;
				*) echo 'Error: I have no idea wtf you tried to feed me there.' ;;
			esac
		else
			echo 'Error: "$1" is not a valid file for extraction'
		fi

		shift
	done
}

# function calc () { awk "BEGIN { print $* }" }
function calc () { echo "$@" | bc -l ; }

# Fix file and folder permissions recursively under .
alias fixperm="find . -type d -exec chmod 755 {} \;; find . -type f -exec chmod 644 {} \;"

function currency() {
	wget -qO- "http://www.google.com/finance/converter?a=$1&from=$2&to=$3&hl=es" |  sed '/res/!d;s/<[^>]*>//g';
}

# aptitude shorthands
alias ag='sudo aptitude'
alias agi='ag install'
alias agu='ag update'
alias agp='ag purge'
alias agg='ag safe-upgrade'
alias ags='aptitude search'

# Yaourt shorthands
alias ya='yaourt'
alias yas='ya -S'
alias yass='ya -Ss'
alias yasy='ya -Sy'
alias yasyy='ya -Syy'
alias yard='ya -Rd'
alias yasyu='ya -Syu'
alias pacleandep='pacman -Qdtq | sudo xargs pacman -Rs'

# ls shorthands
alias ls='ls -Fh --color=auto --group-directories-first'
alias ll='ls -lh'
alias la='ls -a'
alias lla='la -lh'

# Moving around
alias ...='cd ../..'
alias ....='cd ../../..'

# Turn the display off
alias lcdoff='xset dpms force off'

# Set the keyboard up
alias setkb='setxkbmap es; xmodmap ~/.xmodmap'
alias setm='xset m 1/2 1; xinput --set-prop "pointer:Razer Razer Lachesis" "Device Accel Constant Deceleration" 2; xinput --set-prop "pointer:Razer Razer Lachesis" "Evdev Wheel Emulation Inertia" 15'

# Coding facility aliases, mostly bundler related
alias bjek="bundle exec jekyll --auto --server"
alias be='bundle exec'
alias beu='bundle exec unicorn'
alias ber='be rake'
alias bec='be compass'
alias becc='bec compile -c config/compass.rb'
alias becw='bec watch -c config/compass.rb'
alias g='sudo gem'
alias gi='sudo gem install'

# Emacs
# alias e="emacsclient -n"
# alias ec="e -c"
# alias ect="emacsclient -nw"
alias e='emacs'
alias ec=e
alias ect='emacs -nw'
# }}}

# vim:ft=zsh:fdm=marker
