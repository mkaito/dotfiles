# shellcheck shell=bash

export HOMEBREW_NO_ANALYTICS=1
eval "$(/opt/homebrew/bin/brew shellenv)"

if command -v direnv &>/dev/null; then
  eval "$(direnv hook zsh)"
fi

# Make asdf golang shut up
export ASDF_GOLANG_MOD_VERSION_ENABLED=true

# For each path, check that it exists and isn't already in PATH
PATHS=(\
  "$HOME/dev/dotfiles/bin" \
  "$HOME/.local/bin" \
  "$HOME/.cargo/bin" \
  "$HOME/.config/emacs/bin" \
  "$HOME/.dotnet/tools" \
  )

if [[ $OSTYPE =~ darwin* ]]; then
  # This is ridiculous, but it's the only way to get the GNU versions of these
  PATHS+=( \
    "/opt/homebrew/opt/coreutils/libexec/gnubin" \
    "/opt/homebrew/opt/gawk/libexec/gnubin" \
    "/opt/homebrew/opt/gnu-getopt/bin" \
    "/opt/homebrew/opt/gnu-indent/libexec/gnubin" \
    "/opt/homebrew/opt/gnu-sed/libexec/gnubin" \
    "/opt/homebrew/opt/gnu-tar/libexec/gnubin" \
    "/opt/homebrew/opt/grep/libexec/gnubin" \
    "/opt/homebrew/opt/findutils/libexec/gnubin" \
    "/opt/homebrew/opt/postgresql@16/bin" \
  )
fi

for p in "${PATHS[@]}"; do
  case ":$PATH:" in
    *":$p:"*) :;;
    *) [[ -d $p ]] && PATH="$p:$PATH" ;;
  esac
done

export PATH

# Google Cloud SDK
# source "/opt/homebrew/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
# source "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"

# rbenv
# eval "$(rbenv init - zsh)"

# pyenv
# NB: Replaced by uv
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# nodenv
# eval "$(nodenv init -)"

# mise en place
eval "$(/Users/mkaito/.local/bin/mise activate zsh)"
eval "$(/Users/mkaito/.local/bin/mise activate zsh --shims)"

# GPG agent and SSH_AUTH_SOCK
# export GPG_TTY=$(tty)
# export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
