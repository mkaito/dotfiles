source /usr/share/zsh/scripts/zgen/zgen.zsh

# # Load the oh-my-zsh's library.
# antigen use oh-my-zsh

# # Bundles from the default repo (robbyrussell's oh-my-zsh).
# antigen bundle git
# # antigen bundle command-not-found

# # Syntax highlighting bundle.
# # antigen bundle zsh-users/zsh-syntax-highlighting
# antigen bundle jimmijj/zsh-syntax-highlighting
# antigen bundle tarruda/zsh-autosuggestions

# # Pure prompt
# # antigen bundle sindresorhus/pure
# antigen bundle mafredri/zsh-async
# antigen bundle sindresorhus/pure
# # antigen theme pure

# # Tell antigen that you're done.
# antigen apply

# check if there's no init script
if ! zgen saved; then
    echo "Creating a zgen save"

    zgen oh-my-zsh

    # plugins
    zgen oh-my-zsh plugins/git
    zgen oh-my-zsh plugins/sudo

    # zgen load zsh-users/zsh-syntax-highlighting
    zgen load mafredri/zsh-async
    zgen load sindresorhus/pure

    # completions
    zgen load zsh-users/zsh-completions src

    # Fish-style auto-suggestions
    zgen load tarruda/zsh-autosuggestions

    # save all to init script
    zgen save
fi

zle-line-init() {
    zle autosuggest-start
}
zle -N zle-line-init

eval "$(fasd --init auto)"

BASE16_SHELL="/usr/share/base16-shell/base16-grayscale.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

# Bindkey -e
# setopt emacs
setopt nohup
setopt autocd
# setopt cdablevars
# setopt nobgnice
setopt noclobber
# setopt shwordsplit
# setopt interactivecomments
# setopt autopushd pushdminus pushdsilent pushdtohome
# setopt histreduceblanks histignorespace inc_append_history

# This is the default, but since the commands below rely on it, make sure it's
# bound to what we think it is.
bindkey "^Q" push-line
bindkey -s "^[l" "^Qls -l^J"
# bindkey -s "^l" "^Qclear^J"

source ~/dev/dotfiles/zsh/_alias

# Prompt requirements
# setopt extended_glob prompt_subst
# autoload colors zsh/terminfo
# autoload -U zmv

# New style completion system
fpath=(/home/chris/dev/dotfiles/zsh/completion $fpath)
autoload -U compinit; compinit

# Enable completion caching
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache

# Disable hostname completion, because it's slow
zstyle ':completion:*' hosts off

# Quick completions
compdef '_dispatch git git' hub
compdef gpg2=gpg

_get_passwords() {
		reply=(clear `pw complete`)
}
compctl -K _get_passwords pw

# God bless _gnu_generic
compdef _gnu_generic transmission-remote
compdef _gnu_generic bitcoind

#  * List of completers to use
zstyle ":completion:*" completer _complete _match _approximate
#  * Allow approximate
zstyle ":completion:*:match:*" original only
zstyle ":completion:*:approximate:*" max-errors 1 numeric
#  * Selection prompt as menu
zstyle ":completion:*" menu select=1
#  * Menu selection for PID completion
zstyle ":completion:*:*:kill:*" menu yes select
zstyle ":completion:*:kill:*" force-list always
zstyle ":completion:*:processes" command "ps -au$USER"
zstyle ":completion:*:*:kill:*:processes" list-colors "=(#b) #([0-9]#)*=0=01;32"
#  * Don't select parent dir on cd
zstyle ":completion:*:cd:*" ignore-parents parent pwd
#  * Complete with colors
zstyle ":completion:*" list-colors ""

function web ()   { "${BROWSER}" "http://yubnub.org/parser/parse?command=${*}" }
function dsync () { rsync -lprt --progress --stats --delete "$1/" "$2/" }

function snap () {
		[ "$2" ] && tmout="$2"  || tmout=5
		[ "$3" ] && format="$3" || format=png
		fname="${HOME}/$1-`date +%d%m%y-%H%M`"
		for ((i=${tmout}; i>=1; i--)) do; echo -n "${i}.. "; sleep 1; done
		import -window root -quality 100 "${fname}.${format}"
		convert -resize "15%" "${fname}.${format}" "${fname}.th.${format}"
		echo ": ${fname}.${format}"
}

. ~/dev/dotfiles/zsh/todoist_functions.sh

# vim:ft=zsh
